{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.patches import Rectangle\n",
    "import pydicom as dcm\n",
    "%matplotlib inline \n",
    "import os\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "class_info_df = pd.read_csv('stage_1_detailed_class_info.csv')\n",
    "train_labels_df = pd.read_csv('stage_1_train_labels.csv')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('Detailed class info -  rows:', 28989, ' columns:', 2)\n",
      "('Train labels -  rows:', 28989, ' columns:', 6)\n"
     ]
    }
   ],
   "source": [
    "print(\"Detailed class info -  rows:\",class_info_df.shape[0],\" columns:\", class_info_df.shape[1])\n",
    "print(\"Train labels -  rows:\",train_labels_df.shape[0],\" columns:\", train_labels_df.shape[1])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>patientId</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>00313ee0-9eaa-42f4-b0ab-c148ed3241cd</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>00322d4d-1c29-4943-afc9-b6754be640eb</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>003d8fa0-6bf1-40ed-b54c-ac657f8495c5</td>\n",
       "      <td>Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>00436515-870c-4b36-a041-de91049b9ab4</td>\n",
       "      <td>Lung Opacity</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              patientId                         class\n",
       "0  0004cfab-14fd-4e49-80ba-63a80b6bddd6  No Lung Opacity / Not Normal\n",
       "1  00313ee0-9eaa-42f4-b0ab-c148ed3241cd  No Lung Opacity / Not Normal\n",
       "2  00322d4d-1c29-4943-afc9-b6754be640eb  No Lung Opacity / Not Normal\n",
       "3  003d8fa0-6bf1-40ed-b54c-ac657f8495c5                        Normal\n",
       "4  00436515-870c-4b36-a041-de91049b9ab4                  Lung Opacity"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class_info_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "28989"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(class_info_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Total</th>\n",
       "      <th>Percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>height</th>\n",
       "      <td>20025</td>\n",
       "      <td>69.077926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>width</th>\n",
       "      <td>20025</td>\n",
       "      <td>69.077926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>y</th>\n",
       "      <td>20025</td>\n",
       "      <td>69.077926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>x</th>\n",
       "      <td>20025</td>\n",
       "      <td>69.077926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Target</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>patientId</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Total    Percent\n",
       "height     20025  69.077926\n",
       "width      20025  69.077926\n",
       "y          20025  69.077926\n",
       "x          20025  69.077926\n",
       "Target         0   0.000000\n",
       "patientId      0   0.000000"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def missing_data(data):\n",
    "    total = data.isnull().sum().sort_values(ascending = False)\n",
    "    percent = (data.isnull().sum()/data.isnull().count()*100).sort_values(ascending = False)\n",
    "    return pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n",
    "missing_data(train_labels_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature: class\n",
      "No Lung Opacity / Not Normal  :   11500\n",
      "Lung Opacity                  :   8964\n",
      "Normal                        :   8525\n"
     ]
    }
   ],
   "source": [
    "def get_feature_distribution(data, feature): \n",
    "    # Get the count for each label\n",
    "    label_counts = data[feature].value_counts()\n",
    "\n",
    "    # Get total number of samples\n",
    "    total_samples = len(data)\n",
    "\n",
    "    # Count the number of items in each class\n",
    "    print(\"Feature: {}\".format(feature))\n",
    "    for i in range(len(label_counts)):\n",
    "        label = label_counts.index[i]\n",
    "        count = label_counts.values[i]\n",
    "        #percent = int((count / total_samples) * 10000) / 100\n",
    "        print(\"{:<30s}:   {}\" .format(label, count))\n",
    "\n",
    "get_feature_distribution(class_info_df, 'class')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(28989, 'combined cases')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>patientId</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "      <th>width</th>\n",
       "      <th>height</th>\n",
       "      <th>Target</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>21833</th>\n",
       "      <td>c5e3712c-3957-4768-be7f-dc31850d33ad</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6786</th>\n",
       "      <td>51bcdf8f-1ec3-4ba5-96e1-9120e4963b14</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15977</th>\n",
       "      <td>9b1db34a-a649-485c-b615-f464c145b88c</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  patientId   x   y  width  height  Target  \\\n",
       "21833  c5e3712c-3957-4768-be7f-dc31850d33ad NaN NaN    NaN     NaN       0   \n",
       "6786   51bcdf8f-1ec3-4ba5-96e1-9120e4963b14 NaN NaN    NaN     NaN       0   \n",
       "15977  9b1db34a-a649-485c-b615-f464c145b88c NaN NaN    NaN     NaN       0   \n",
       "\n",
       "                              class  \n",
       "21833                        Normal  \n",
       "6786   No Lung Opacity / Not Normal  \n",
       "15977  No Lung Opacity / Not Normal  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_class_df = pd.concat([train_labels_df, \n",
    "                        class_info_df.drop('patientId',1)], 1)\n",
    "print(train_class_df.shape[0], 'combined cases')\n",
    "train_class_df.sample(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "28989"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(train_class_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['da52346f-930f-4d7f-9848-fe26a7c0a727.dcm', 'fffb2395-8edd-4954-8a89-ffe2fd329be3.dcm', 'b99b5a9a-d2cc-4e46-a419-cc7f1006dedd.dcm', '09547f4f-c52e-4fd7-8738-0e01e6277034.dcm', '7764c030-6b66-46a7-8768-1ea7ae381015.dcm']\n"
     ]
    }
   ],
   "source": [
    "image_sample_path = os.listdir('stage_1_train_images/')[:5]\n",
    "print(image_sample_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('Unique patientId in  train_class_df: ', 25684)\n"
     ]
    }
   ],
   "source": [
    "print(\"Unique patientId in  train_class_df: \", train_class_df['patientId'].nunique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>patientId</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "      <th>width</th>\n",
       "      <th>height</th>\n",
       "      <th>Target</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0004cfab-14fd-4e49-80ba-63a80b6bddd6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>00313ee0-9eaa-42f4-b0ab-c148ed3241cd</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>00322d4d-1c29-4943-afc9-b6754be640eb</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>003d8fa0-6bf1-40ed-b54c-ac657f8495c5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>00436515-870c-4b36-a041-de91049b9ab4</td>\n",
       "      <td>264.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>213.0</td>\n",
       "      <td>379.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              patientId      x      y  width  height  Target  \\\n",
       "0  0004cfab-14fd-4e49-80ba-63a80b6bddd6    NaN    NaN    NaN     NaN       0   \n",
       "1  00313ee0-9eaa-42f4-b0ab-c148ed3241cd    NaN    NaN    NaN     NaN       0   \n",
       "2  00322d4d-1c29-4943-afc9-b6754be640eb    NaN    NaN    NaN     NaN       0   \n",
       "3  003d8fa0-6bf1-40ed-b54c-ac657f8495c5    NaN    NaN    NaN     NaN       0   \n",
       "4  00436515-870c-4b36-a041-de91049b9ab4  264.0  152.0  213.0   379.0       1   \n",
       "\n",
       "                          class  \n",
       "0  No Lung Opacity / Not Normal  \n",
       "1  No Lung Opacity / Not Normal  \n",
       "2  No Lung Opacity / Not Normal  \n",
       "3                        Normal  \n",
       "4                  Lung Opacity  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_class_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>boxes</th>\n",
       "      <th>patients</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>22506</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>3062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   boxes  patients\n",
       "0      1     22506\n",
       "1      2      3062\n",
       "2      3       105\n",
       "3      4        11"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_df = train_class_df.groupby('patientId').\\\n",
    "    size().\\\n",
    "    reset_index(name='boxes')\n",
    "train_class_df = pd.merge(train_class_df, box_df, on='patientId')\n",
    "box_df.\\\n",
    "    groupby('boxes').\\\n",
    "    size().\\\n",
    "    reset_index(name='patients')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "28989"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_file_link(data):\n",
    "    Image_data = {}\n",
    "    for id in data['patientId']:\n",
    "        dicom_file_path = \"stage_1_train_images/\" + str(id) + '.dcm'\n",
    "        Image_data[id] = dicom_file_path\n",
    "    return Image_data\n",
    "def show_dicom_images(data):\n",
    "    data_list = []\n",
    "    Image_data = create_file_link(data=data)\n",
    "    img_data = list(Image_data.keys())\n",
    "    #f, ax = plt.subplots(3,3, figsize=(16,18))\n",
    "    #image_sample_path = os.listdir('stage_1_train_images/')\n",
    "    i = 0\n",
    "    #data_keys = list(Image_data.keys())\n",
    "    for key in img_data:\n",
    "        imagePath = Image_data[key]\n",
    "        data_row_img_data = dcm.read_file(imagePath)\n",
    "        modality = data_row_img_data.Modality\n",
    "        age = data_row_img_data.PatientAge\n",
    "        sex = data_row_img_data.PatientSex\n",
    "        view_position = data_row_img_data.ViewPosition\n",
    "        body_part = data_row_img_data.BodyPartExamined\n",
    "        path = create_file_link(train_class_df).values()\n",
    "        l = list([img_data[i],modality,age,sex,view_position,body_part])\n",
    "        data_list.append(l)\n",
    "        i = i+1\n",
    "    all_data = pd.DataFrame(data_list,columns=['patientId','modality','age','sex','view_position','body_part'])\n",
    "    return all_data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df = show_dicom_images(train_class_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "path = pd.DataFrame(create_file_link(train_class_df).values())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['path'] = path"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25684"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>patientId</th>\n",
       "      <th>modality</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>view_position</th>\n",
       "      <th>body_part</th>\n",
       "      <th>path</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>cf0c675d-fb78-462b-b17d-9a41f0b7c6b1</td>\n",
       "      <td>CR</td>\n",
       "      <td>69</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/cf0c675d-fb78-462b-b17d-9...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>c4057b1c-85cb-4c46-b395-faf6c2cd95a2</td>\n",
       "      <td>CR</td>\n",
       "      <td>26</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/c4057b1c-85cb-4c46-b395-f...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7fdcd4cb-80f3-4450-a505-41cacc994c1f</td>\n",
       "      <td>CR</td>\n",
       "      <td>50</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/7fdcd4cb-80f3-4450-a505-4...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>b0780603-efa4-453c-a51c-a23c4efedfc1</td>\n",
       "      <td>CR</td>\n",
       "      <td>31</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/b0780603-efa4-453c-a51c-a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>915cea19-c952-4b76-b821-17e2ae425b4c</td>\n",
       "      <td>CR</td>\n",
       "      <td>20</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/915cea19-c952-4b76-b821-1...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              patientId modality age sex view_position  \\\n",
       "0  cf0c675d-fb78-462b-b17d-9a41f0b7c6b1       CR  69   M            AP   \n",
       "1  c4057b1c-85cb-4c46-b395-faf6c2cd95a2       CR  26   F            AP   \n",
       "2  7fdcd4cb-80f3-4450-a505-41cacc994c1f       CR  50   M            AP   \n",
       "3  b0780603-efa4-453c-a51c-a23c4efedfc1       CR  31   F            AP   \n",
       "4  915cea19-c952-4b76-b821-17e2ae425b4c       CR  20   M            AP   \n",
       "\n",
       "  body_part                                               path  \n",
       "0     CHEST  stage_1_train_images/cf0c675d-fb78-462b-b17d-9...  \n",
       "1     CHEST  stage_1_train_images/c4057b1c-85cb-4c46-b395-f...  \n",
       "2     CHEST  stage_1_train_images/7fdcd4cb-80f3-4450-a505-4...  \n",
       "3     CHEST  stage_1_train_images/b0780603-efa4-453c-a51c-a...  \n",
       "4     CHEST  stage_1_train_images/915cea19-c952-4b76-b821-1...  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "final_dataframe = df.merge(train_class_df, how ='left',on='patientId')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "28989"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(final_dataframe)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>patientId</th>\n",
       "      <th>modality</th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>view_position</th>\n",
       "      <th>body_part</th>\n",
       "      <th>path</th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "      <th>width</th>\n",
       "      <th>height</th>\n",
       "      <th>Target</th>\n",
       "      <th>class</th>\n",
       "      <th>boxes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>cf0c675d-fb78-462b-b17d-9a41f0b7c6b1</td>\n",
       "      <td>CR</td>\n",
       "      <td>69</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/cf0c675d-fb78-462b-b17d-9...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>c4057b1c-85cb-4c46-b395-faf6c2cd95a2</td>\n",
       "      <td>CR</td>\n",
       "      <td>26</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/c4057b1c-85cb-4c46-b395-f...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7fdcd4cb-80f3-4450-a505-41cacc994c1f</td>\n",
       "      <td>CR</td>\n",
       "      <td>50</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/7fdcd4cb-80f3-4450-a505-4...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>b0780603-efa4-453c-a51c-a23c4efedfc1</td>\n",
       "      <td>CR</td>\n",
       "      <td>31</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/b0780603-efa4-453c-a51c-a...</td>\n",
       "      <td>629.0</td>\n",
       "      <td>356.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>228.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>b0780603-efa4-453c-a51c-a23c4efedfc1</td>\n",
       "      <td>CR</td>\n",
       "      <td>31</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/b0780603-efa4-453c-a51c-a...</td>\n",
       "      <td>236.0</td>\n",
       "      <td>358.0</td>\n",
       "      <td>226.0</td>\n",
       "      <td>227.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>915cea19-c952-4b76-b821-17e2ae425b4c</td>\n",
       "      <td>CR</td>\n",
       "      <td>20</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/915cea19-c952-4b76-b821-1...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6dd82c53-30ac-42fb-aa7c-2bacdc03a766</td>\n",
       "      <td>CR</td>\n",
       "      <td>46</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/6dd82c53-30ac-42fb-aa7c-2...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>e275574b-e788-4b08-96ef-2f26a66cca89</td>\n",
       "      <td>CR</td>\n",
       "      <td>54</td>\n",
       "      <td>F</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/e275574b-e788-4b08-96ef-2...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>17e4fe87-199a-481d-a77f-52a4e481780a</td>\n",
       "      <td>CR</td>\n",
       "      <td>62</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/17e4fe87-199a-481d-a77f-5...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>c33d14fe-bae6-458c-b6d8-b36fce161298</td>\n",
       "      <td>CR</td>\n",
       "      <td>62</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/c33d14fe-bae6-458c-b6d8-b...</td>\n",
       "      <td>636.0</td>\n",
       "      <td>417.0</td>\n",
       "      <td>216.0</td>\n",
       "      <td>344.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>935a25a1-3573-47b7-b91f-b3852b9a8f11</td>\n",
       "      <td>CR</td>\n",
       "      <td>65</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/935a25a1-3573-47b7-b91f-b...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>359ce100-a41f-40e2-ba95-c91b83725a35</td>\n",
       "      <td>CR</td>\n",
       "      <td>51</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/359ce100-a41f-40e2-ba95-c...</td>\n",
       "      <td>169.0</td>\n",
       "      <td>321.0</td>\n",
       "      <td>190.0</td>\n",
       "      <td>394.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>359ce100-a41f-40e2-ba95-c91b83725a35</td>\n",
       "      <td>CR</td>\n",
       "      <td>51</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/359ce100-a41f-40e2-ba95-c...</td>\n",
       "      <td>495.0</td>\n",
       "      <td>346.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>266.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>b8b45d03-8161-4537-b5c5-a8f26299101c</td>\n",
       "      <td>CR</td>\n",
       "      <td>52</td>\n",
       "      <td>F</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/b8b45d03-8161-4537-b5c5-a...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>bb4ba6c1-947b-4b84-a9f0-10d5d300a31e</td>\n",
       "      <td>CR</td>\n",
       "      <td>73</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/bb4ba6c1-947b-4b84-a9f0-1...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>ca882f38-6c8f-4f2b-bff7-8327315257f8</td>\n",
       "      <td>CR</td>\n",
       "      <td>57</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/ca882f38-6c8f-4f2b-bff7-8...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>721c7144-49a9-4cfa-8a47-8a1227063093</td>\n",
       "      <td>CR</td>\n",
       "      <td>54</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/721c7144-49a9-4cfa-8a47-8...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>bd20e44c-abe6-48ac-afc7-e5cd95aa9441</td>\n",
       "      <td>CR</td>\n",
       "      <td>58</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/bd20e44c-abe6-48ac-afc7-e...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>fde4f769-7270-43df-93e6-b26f0c651960</td>\n",
       "      <td>CR</td>\n",
       "      <td>65</td>\n",
       "      <td>F</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/fde4f769-7270-43df-93e6-b...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>cb157fb1-b5d1-4599-8c14-3b3229b53cbe</td>\n",
       "      <td>CR</td>\n",
       "      <td>60</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/cb157fb1-b5d1-4599-8c14-3...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>5d3ab08a-dc2c-4441-83b1-8926f46b29f7</td>\n",
       "      <td>CR</td>\n",
       "      <td>63</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/5d3ab08a-dc2c-4441-83b1-8...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>7e2d9c61-e029-403c-ac1b-49f11db36a90</td>\n",
       "      <td>CR</td>\n",
       "      <td>68</td>\n",
       "      <td>F</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/7e2d9c61-e029-403c-ac1b-4...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>b3ffee84-ce9e-43e5-879a-86fef0e875a2</td>\n",
       "      <td>CR</td>\n",
       "      <td>59</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/b3ffee84-ce9e-43e5-879a-8...</td>\n",
       "      <td>600.0</td>\n",
       "      <td>624.0</td>\n",
       "      <td>214.0</td>\n",
       "      <td>159.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>b3ffee84-ce9e-43e5-879a-86fef0e875a2</td>\n",
       "      <td>CR</td>\n",
       "      <td>59</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/b3ffee84-ce9e-43e5-879a-8...</td>\n",
       "      <td>255.0</td>\n",
       "      <td>573.0</td>\n",
       "      <td>135.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>6a9eeb3f-54e8-4acc-b30a-026684451e62</td>\n",
       "      <td>CR</td>\n",
       "      <td>59</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/6a9eeb3f-54e8-4acc-b30a-0...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>677eaf56-e6c5-4b1f-9048-966af401578d</td>\n",
       "      <td>CR</td>\n",
       "      <td>47</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/677eaf56-e6c5-4b1f-9048-9...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>4b92f925-74f7-4941-94d7-0883aebab46a</td>\n",
       "      <td>CR</td>\n",
       "      <td>66</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/4b92f925-74f7-4941-94d7-0...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>c2565641-00af-46a3-8328-4d9c8f319446</td>\n",
       "      <td>CR</td>\n",
       "      <td>22</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/c2565641-00af-46a3-8328-4...</td>\n",
       "      <td>654.0</td>\n",
       "      <td>238.0</td>\n",
       "      <td>302.0</td>\n",
       "      <td>433.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>6f50bef2-f849-42c1-8e00-d3003b9ced67</td>\n",
       "      <td>CR</td>\n",
       "      <td>38</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/6f50bef2-f849-42c1-8e00-d...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>d84420c3-ad2e-4308-8686-22cf5035c65a</td>\n",
       "      <td>CR</td>\n",
       "      <td>20</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/d84420c3-ad2e-4308-8686-2...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28959</th>\n",
       "      <td>661e85c7-43cc-4e45-82a7-485b470e64e5</td>\n",
       "      <td>CR</td>\n",
       "      <td>58</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/661e85c7-43cc-4e45-82a7-4...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28960</th>\n",
       "      <td>9e7bd306-471d-4c5c-aa53-a9d24e0779bc</td>\n",
       "      <td>CR</td>\n",
       "      <td>51</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/9e7bd306-471d-4c5c-aa53-a...</td>\n",
       "      <td>555.0</td>\n",
       "      <td>515.0</td>\n",
       "      <td>229.0</td>\n",
       "      <td>358.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28961</th>\n",
       "      <td>9e7bd306-471d-4c5c-aa53-a9d24e0779bc</td>\n",
       "      <td>CR</td>\n",
       "      <td>51</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/9e7bd306-471d-4c5c-aa53-a...</td>\n",
       "      <td>163.0</td>\n",
       "      <td>423.0</td>\n",
       "      <td>202.0</td>\n",
       "      <td>402.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28962</th>\n",
       "      <td>c2e4e8a9-00bf-4790-9ab6-8829e9890915</td>\n",
       "      <td>CR</td>\n",
       "      <td>61</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/c2e4e8a9-00bf-4790-9ab6-8...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28963</th>\n",
       "      <td>4bc1e1af-0526-4e07-8418-d7072880e19b</td>\n",
       "      <td>CR</td>\n",
       "      <td>24</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/4bc1e1af-0526-4e07-8418-d...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28964</th>\n",
       "      <td>ec93d206-ec61-4e16-afc4-898f754916fa</td>\n",
       "      <td>CR</td>\n",
       "      <td>81</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/ec93d206-ec61-4e16-afc4-8...</td>\n",
       "      <td>666.0</td>\n",
       "      <td>597.0</td>\n",
       "      <td>134.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28965</th>\n",
       "      <td>ec93d206-ec61-4e16-afc4-898f754916fa</td>\n",
       "      <td>CR</td>\n",
       "      <td>81</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/ec93d206-ec61-4e16-afc4-8...</td>\n",
       "      <td>277.0</td>\n",
       "      <td>624.0</td>\n",
       "      <td>164.0</td>\n",
       "      <td>284.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28966</th>\n",
       "      <td>d7daa7db-879a-49ff-b996-942880192c25</td>\n",
       "      <td>CR</td>\n",
       "      <td>79</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/d7daa7db-879a-49ff-b996-9...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28967</th>\n",
       "      <td>ea813cfd-b932-4872-a969-d6d5f8c01d13</td>\n",
       "      <td>CR</td>\n",
       "      <td>65</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/ea813cfd-b932-4872-a969-d...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28968</th>\n",
       "      <td>c908770d-5bb8-479e-9112-ff9c47d07277</td>\n",
       "      <td>CR</td>\n",
       "      <td>11</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/c908770d-5bb8-479e-9112-f...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28969</th>\n",
       "      <td>fa4f2172-b7b7-47c9-ba52-04642e880a68</td>\n",
       "      <td>CR</td>\n",
       "      <td>58</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/fa4f2172-b7b7-47c9-ba52-0...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28970</th>\n",
       "      <td>9662cf15-893b-475f-b0e7-2c6d98dfa057</td>\n",
       "      <td>CR</td>\n",
       "      <td>70</td>\n",
       "      <td>F</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/9662cf15-893b-475f-b0e7-2...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28971</th>\n",
       "      <td>e6d2c2e7-7b43-4c72-8e3c-601d071630c0</td>\n",
       "      <td>CR</td>\n",
       "      <td>40</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/e6d2c2e7-7b43-4c72-8e3c-6...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28972</th>\n",
       "      <td>d554803a-b040-4952-b21d-9fbe9faf53a7</td>\n",
       "      <td>CR</td>\n",
       "      <td>56</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/d554803a-b040-4952-b21d-9...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28973</th>\n",
       "      <td>df50d16a-01d7-46e0-bdd4-35c605d20307</td>\n",
       "      <td>CR</td>\n",
       "      <td>51</td>\n",
       "      <td>F</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/df50d16a-01d7-46e0-bdd4-3...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28974</th>\n",
       "      <td>efea1e5c-246f-48b9-a076-83f4e8285eaa</td>\n",
       "      <td>CR</td>\n",
       "      <td>39</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/efea1e5c-246f-48b9-a076-8...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28975</th>\n",
       "      <td>ac251548-5770-476a-8987-c928980312c5</td>\n",
       "      <td>CR</td>\n",
       "      <td>58</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/ac251548-5770-476a-8987-c...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28976</th>\n",
       "      <td>e87969b7-a21f-42d4-9a22-dc519898d2a3</td>\n",
       "      <td>CR</td>\n",
       "      <td>37</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/e87969b7-a21f-42d4-9a22-d...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28977</th>\n",
       "      <td>99cfa926-cecb-4efc-8aea-264531354e89</td>\n",
       "      <td>CR</td>\n",
       "      <td>43</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/99cfa926-cecb-4efc-8aea-2...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28978</th>\n",
       "      <td>c918acc8-d366-407b-b7c1-d5533923ffbd</td>\n",
       "      <td>CR</td>\n",
       "      <td>45</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/c918acc8-d366-407b-b7c1-d...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28979</th>\n",
       "      <td>f31e9d45-6981-4d60-a201-130fde4967c3</td>\n",
       "      <td>CR</td>\n",
       "      <td>37</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/f31e9d45-6981-4d60-a201-1...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28980</th>\n",
       "      <td>ea3b4c3b-22e5-420e-99af-daad9b460133</td>\n",
       "      <td>CR</td>\n",
       "      <td>56</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/ea3b4c3b-22e5-420e-99af-d...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28981</th>\n",
       "      <td>b0fbd4ac-3ab4-44fe-9c2f-4179bbf4260e</td>\n",
       "      <td>CR</td>\n",
       "      <td>58</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/b0fbd4ac-3ab4-44fe-9c2f-4...</td>\n",
       "      <td>287.0</td>\n",
       "      <td>507.0</td>\n",
       "      <td>161.0</td>\n",
       "      <td>218.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28982</th>\n",
       "      <td>916d9880-914d-49da-b1ee-011714c9c1b7</td>\n",
       "      <td>CR</td>\n",
       "      <td>76</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/916d9880-914d-49da-b1ee-0...</td>\n",
       "      <td>258.0</td>\n",
       "      <td>273.0</td>\n",
       "      <td>241.0</td>\n",
       "      <td>535.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28983</th>\n",
       "      <td>916d9880-914d-49da-b1ee-011714c9c1b7</td>\n",
       "      <td>CR</td>\n",
       "      <td>76</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/916d9880-914d-49da-b1ee-0...</td>\n",
       "      <td>608.0</td>\n",
       "      <td>350.0</td>\n",
       "      <td>158.0</td>\n",
       "      <td>290.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Lung Opacity</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28984</th>\n",
       "      <td>7d889abc-6804-4b28-adb3-3540ecb055c6</td>\n",
       "      <td>CR</td>\n",
       "      <td>9</td>\n",
       "      <td>M</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/7d889abc-6804-4b28-adb3-3...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28985</th>\n",
       "      <td>8af01f75-895a-4492-95d1-63c2532be8c0</td>\n",
       "      <td>CR</td>\n",
       "      <td>52</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/8af01f75-895a-4492-95d1-6...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28986</th>\n",
       "      <td>cf49fc43-42dc-458c-99cd-6d20e717fe03</td>\n",
       "      <td>CR</td>\n",
       "      <td>72</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/cf49fc43-42dc-458c-99cd-6...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28987</th>\n",
       "      <td>d0cf8016-d549-4239-9d81-969f13e39663</td>\n",
       "      <td>CR</td>\n",
       "      <td>84</td>\n",
       "      <td>M</td>\n",
       "      <td>PA</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/d0cf8016-d549-4239-9d81-9...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28988</th>\n",
       "      <td>87069fbf-4fd6-4c66-8072-80d4b10a4f92</td>\n",
       "      <td>CR</td>\n",
       "      <td>62</td>\n",
       "      <td>F</td>\n",
       "      <td>AP</td>\n",
       "      <td>CHEST</td>\n",
       "      <td>stage_1_train_images/87069fbf-4fd6-4c66-8072-8...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>No Lung Opacity / Not Normal</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>28989 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  patientId modality age sex view_position  \\\n",
       "0      cf0c675d-fb78-462b-b17d-9a41f0b7c6b1       CR  69   M            AP   \n",
       "1      c4057b1c-85cb-4c46-b395-faf6c2cd95a2       CR  26   F            AP   \n",
       "2      7fdcd4cb-80f3-4450-a505-41cacc994c1f       CR  50   M            AP   \n",
       "3      b0780603-efa4-453c-a51c-a23c4efedfc1       CR  31   F            AP   \n",
       "4      b0780603-efa4-453c-a51c-a23c4efedfc1       CR  31   F            AP   \n",
       "5      915cea19-c952-4b76-b821-17e2ae425b4c       CR  20   M            AP   \n",
       "6      6dd82c53-30ac-42fb-aa7c-2bacdc03a766       CR  46   M            AP   \n",
       "7      e275574b-e788-4b08-96ef-2f26a66cca89       CR  54   F            PA   \n",
       "8      17e4fe87-199a-481d-a77f-52a4e481780a       CR  62   F            AP   \n",
       "9      c33d14fe-bae6-458c-b6d8-b36fce161298       CR  62   M            PA   \n",
       "10     935a25a1-3573-47b7-b91f-b3852b9a8f11       CR  65   M            PA   \n",
       "11     359ce100-a41f-40e2-ba95-c91b83725a35       CR  51   F            AP   \n",
       "12     359ce100-a41f-40e2-ba95-c91b83725a35       CR  51   F            AP   \n",
       "13     b8b45d03-8161-4537-b5c5-a8f26299101c       CR  52   F            PA   \n",
       "14     bb4ba6c1-947b-4b84-a9f0-10d5d300a31e       CR  73   M            PA   \n",
       "15     ca882f38-6c8f-4f2b-bff7-8327315257f8       CR  57   M            AP   \n",
       "16     721c7144-49a9-4cfa-8a47-8a1227063093       CR  54   F            AP   \n",
       "17     bd20e44c-abe6-48ac-afc7-e5cd95aa9441       CR  58   F            AP   \n",
       "18     fde4f769-7270-43df-93e6-b26f0c651960       CR  65   F            PA   \n",
       "19     cb157fb1-b5d1-4599-8c14-3b3229b53cbe       CR  60   M            AP   \n",
       "20     5d3ab08a-dc2c-4441-83b1-8926f46b29f7       CR  63   F            AP   \n",
       "21     7e2d9c61-e029-403c-ac1b-49f11db36a90       CR  68   F            PA   \n",
       "22     b3ffee84-ce9e-43e5-879a-86fef0e875a2       CR  59   M            AP   \n",
       "23     b3ffee84-ce9e-43e5-879a-86fef0e875a2       CR  59   M            AP   \n",
       "24     6a9eeb3f-54e8-4acc-b30a-026684451e62       CR  59   M            PA   \n",
       "25     677eaf56-e6c5-4b1f-9048-966af401578d       CR  47   M            AP   \n",
       "26     4b92f925-74f7-4941-94d7-0883aebab46a       CR  66   M            PA   \n",
       "27     c2565641-00af-46a3-8328-4d9c8f319446       CR  22   M            PA   \n",
       "28     6f50bef2-f849-42c1-8e00-d3003b9ced67       CR  38   M            AP   \n",
       "29     d84420c3-ad2e-4308-8686-22cf5035c65a       CR  20   M            PA   \n",
       "...                                     ...      ...  ..  ..           ...   \n",
       "28959  661e85c7-43cc-4e45-82a7-485b470e64e5       CR  58   F            AP   \n",
       "28960  9e7bd306-471d-4c5c-aa53-a9d24e0779bc       CR  51   F            AP   \n",
       "28961  9e7bd306-471d-4c5c-aa53-a9d24e0779bc       CR  51   F            AP   \n",
       "28962  c2e4e8a9-00bf-4790-9ab6-8829e9890915       CR  61   M            PA   \n",
       "28963  4bc1e1af-0526-4e07-8418-d7072880e19b       CR  24   M            AP   \n",
       "28964  ec93d206-ec61-4e16-afc4-898f754916fa       CR  81   F            AP   \n",
       "28965  ec93d206-ec61-4e16-afc4-898f754916fa       CR  81   F            AP   \n",
       "28966  d7daa7db-879a-49ff-b996-942880192c25       CR  79   F            AP   \n",
       "28967  ea813cfd-b932-4872-a969-d6d5f8c01d13       CR  65   F            AP   \n",
       "28968  c908770d-5bb8-479e-9112-ff9c47d07277       CR  11   F            AP   \n",
       "28969  fa4f2172-b7b7-47c9-ba52-04642e880a68       CR  58   F            AP   \n",
       "28970  9662cf15-893b-475f-b0e7-2c6d98dfa057       CR  70   F            PA   \n",
       "28971  e6d2c2e7-7b43-4c72-8e3c-601d071630c0       CR  40   M            PA   \n",
       "28972  d554803a-b040-4952-b21d-9fbe9faf53a7       CR  56   M            PA   \n",
       "28973  df50d16a-01d7-46e0-bdd4-35c605d20307       CR  51   F            PA   \n",
       "28974  efea1e5c-246f-48b9-a076-83f4e8285eaa       CR  39   M            AP   \n",
       "28975  ac251548-5770-476a-8987-c928980312c5       CR  58   F            AP   \n",
       "28976  e87969b7-a21f-42d4-9a22-dc519898d2a3       CR  37   F            AP   \n",
       "28977  99cfa926-cecb-4efc-8aea-264531354e89       CR  43   F            AP   \n",
       "28978  c918acc8-d366-407b-b7c1-d5533923ffbd       CR  45   M            AP   \n",
       "28979  f31e9d45-6981-4d60-a201-130fde4967c3       CR  37   M            AP   \n",
       "28980  ea3b4c3b-22e5-420e-99af-daad9b460133       CR  56   M            PA   \n",
       "28981  b0fbd4ac-3ab4-44fe-9c2f-4179bbf4260e       CR  58   M            AP   \n",
       "28982  916d9880-914d-49da-b1ee-011714c9c1b7       CR  76   F            AP   \n",
       "28983  916d9880-914d-49da-b1ee-011714c9c1b7       CR  76   F            AP   \n",
       "28984  7d889abc-6804-4b28-adb3-3540ecb055c6       CR   9   M            AP   \n",
       "28985  8af01f75-895a-4492-95d1-63c2532be8c0       CR  52   M            PA   \n",
       "28986  cf49fc43-42dc-458c-99cd-6d20e717fe03       CR  72   F            AP   \n",
       "28987  d0cf8016-d549-4239-9d81-969f13e39663       CR  84   M            PA   \n",
       "28988  87069fbf-4fd6-4c66-8072-80d4b10a4f92       CR  62   F            AP   \n",
       "\n",
       "      body_part                                               path      x  \\\n",
       "0         CHEST  stage_1_train_images/cf0c675d-fb78-462b-b17d-9...    NaN   \n",
       "1         CHEST  stage_1_train_images/c4057b1c-85cb-4c46-b395-f...    NaN   \n",
       "2         CHEST  stage_1_train_images/7fdcd4cb-80f3-4450-a505-4...    NaN   \n",
       "3         CHEST  stage_1_train_images/b0780603-efa4-453c-a51c-a...  629.0   \n",
       "4         CHEST  stage_1_train_images/b0780603-efa4-453c-a51c-a...  236.0   \n",
       "5         CHEST  stage_1_train_images/915cea19-c952-4b76-b821-1...    NaN   \n",
       "6         CHEST  stage_1_train_images/6dd82c53-30ac-42fb-aa7c-2...    NaN   \n",
       "7         CHEST  stage_1_train_images/e275574b-e788-4b08-96ef-2...    NaN   \n",
       "8         CHEST  stage_1_train_images/17e4fe87-199a-481d-a77f-5...    NaN   \n",
       "9         CHEST  stage_1_train_images/c33d14fe-bae6-458c-b6d8-b...  636.0   \n",
       "10        CHEST  stage_1_train_images/935a25a1-3573-47b7-b91f-b...    NaN   \n",
       "11        CHEST  stage_1_train_images/359ce100-a41f-40e2-ba95-c...  169.0   \n",
       "12        CHEST  stage_1_train_images/359ce100-a41f-40e2-ba95-c...  495.0   \n",
       "13        CHEST  stage_1_train_images/b8b45d03-8161-4537-b5c5-a...    NaN   \n",
       "14        CHEST  stage_1_train_images/bb4ba6c1-947b-4b84-a9f0-1...    NaN   \n",
       "15        CHEST  stage_1_train_images/ca882f38-6c8f-4f2b-bff7-8...    NaN   \n",
       "16        CHEST  stage_1_train_images/721c7144-49a9-4cfa-8a47-8...    NaN   \n",
       "17        CHEST  stage_1_train_images/bd20e44c-abe6-48ac-afc7-e...    NaN   \n",
       "18        CHEST  stage_1_train_images/fde4f769-7270-43df-93e6-b...    NaN   \n",
       "19        CHEST  stage_1_train_images/cb157fb1-b5d1-4599-8c14-3...    NaN   \n",
       "20        CHEST  stage_1_train_images/5d3ab08a-dc2c-4441-83b1-8...    NaN   \n",
       "21        CHEST  stage_1_train_images/7e2d9c61-e029-403c-ac1b-4...    NaN   \n",
       "22        CHEST  stage_1_train_images/b3ffee84-ce9e-43e5-879a-8...  600.0   \n",
       "23        CHEST  stage_1_train_images/b3ffee84-ce9e-43e5-879a-8...  255.0   \n",
       "24        CHEST  stage_1_train_images/6a9eeb3f-54e8-4acc-b30a-0...    NaN   \n",
       "25        CHEST  stage_1_train_images/677eaf56-e6c5-4b1f-9048-9...    NaN   \n",
       "26        CHEST  stage_1_train_images/4b92f925-74f7-4941-94d7-0...    NaN   \n",
       "27        CHEST  stage_1_train_images/c2565641-00af-46a3-8328-4...  654.0   \n",
       "28        CHEST  stage_1_train_images/6f50bef2-f849-42c1-8e00-d...    NaN   \n",
       "29        CHEST  stage_1_train_images/d84420c3-ad2e-4308-8686-2...    NaN   \n",
       "...         ...                                                ...    ...   \n",
       "28959     CHEST  stage_1_train_images/661e85c7-43cc-4e45-82a7-4...    NaN   \n",
       "28960     CHEST  stage_1_train_images/9e7bd306-471d-4c5c-aa53-a...  555.0   \n",
       "28961     CHEST  stage_1_train_images/9e7bd306-471d-4c5c-aa53-a...  163.0   \n",
       "28962     CHEST  stage_1_train_images/c2e4e8a9-00bf-4790-9ab6-8...    NaN   \n",
       "28963     CHEST  stage_1_train_images/4bc1e1af-0526-4e07-8418-d...    NaN   \n",
       "28964     CHEST  stage_1_train_images/ec93d206-ec61-4e16-afc4-8...  666.0   \n",
       "28965     CHEST  stage_1_train_images/ec93d206-ec61-4e16-afc4-8...  277.0   \n",
       "28966     CHEST  stage_1_train_images/d7daa7db-879a-49ff-b996-9...    NaN   \n",
       "28967     CHEST  stage_1_train_images/ea813cfd-b932-4872-a969-d...    NaN   \n",
       "28968     CHEST  stage_1_train_images/c908770d-5bb8-479e-9112-f...    NaN   \n",
       "28969     CHEST  stage_1_train_images/fa4f2172-b7b7-47c9-ba52-0...    NaN   \n",
       "28970     CHEST  stage_1_train_images/9662cf15-893b-475f-b0e7-2...    NaN   \n",
       "28971     CHEST  stage_1_train_images/e6d2c2e7-7b43-4c72-8e3c-6...    NaN   \n",
       "28972     CHEST  stage_1_train_images/d554803a-b040-4952-b21d-9...    NaN   \n",
       "28973     CHEST  stage_1_train_images/df50d16a-01d7-46e0-bdd4-3...    NaN   \n",
       "28974     CHEST  stage_1_train_images/efea1e5c-246f-48b9-a076-8...    NaN   \n",
       "28975     CHEST  stage_1_train_images/ac251548-5770-476a-8987-c...    NaN   \n",
       "28976     CHEST  stage_1_train_images/e87969b7-a21f-42d4-9a22-d...    NaN   \n",
       "28977     CHEST  stage_1_train_images/99cfa926-cecb-4efc-8aea-2...    NaN   \n",
       "28978     CHEST  stage_1_train_images/c918acc8-d366-407b-b7c1-d...    NaN   \n",
       "28979     CHEST  stage_1_train_images/f31e9d45-6981-4d60-a201-1...    NaN   \n",
       "28980     CHEST  stage_1_train_images/ea3b4c3b-22e5-420e-99af-d...    NaN   \n",
       "28981     CHEST  stage_1_train_images/b0fbd4ac-3ab4-44fe-9c2f-4...  287.0   \n",
       "28982     CHEST  stage_1_train_images/916d9880-914d-49da-b1ee-0...  258.0   \n",
       "28983     CHEST  stage_1_train_images/916d9880-914d-49da-b1ee-0...  608.0   \n",
       "28984     CHEST  stage_1_train_images/7d889abc-6804-4b28-adb3-3...    NaN   \n",
       "28985     CHEST  stage_1_train_images/8af01f75-895a-4492-95d1-6...    NaN   \n",
       "28986     CHEST  stage_1_train_images/cf49fc43-42dc-458c-99cd-6...    NaN   \n",
       "28987     CHEST  stage_1_train_images/d0cf8016-d549-4239-9d81-9...    NaN   \n",
       "28988     CHEST  stage_1_train_images/87069fbf-4fd6-4c66-8072-8...    NaN   \n",
       "\n",
       "           y  width  height  Target                         class  boxes  \n",
       "0        NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "1        NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "2        NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "3      356.0  195.0   228.0       1                  Lung Opacity      2  \n",
       "4      358.0  226.0   227.0       1                  Lung Opacity      2  \n",
       "5        NaN    NaN     NaN       0                        Normal      1  \n",
       "6        NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "7        NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "8        NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "9      417.0  216.0   344.0       1                  Lung Opacity      1  \n",
       "10       NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "11     321.0  190.0   394.0       1                  Lung Opacity      2  \n",
       "12     346.0  240.0   266.0       1                  Lung Opacity      2  \n",
       "13       NaN    NaN     NaN       0                        Normal      1  \n",
       "14       NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "15       NaN    NaN     NaN       0                        Normal      1  \n",
       "16       NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "17       NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "18       NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "19       NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "20       NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "21       NaN    NaN     NaN       0                        Normal      1  \n",
       "22     624.0  214.0   159.0       1                  Lung Opacity      2  \n",
       "23     573.0  135.0   128.0       1                  Lung Opacity      2  \n",
       "24       NaN    NaN     NaN       0                        Normal      1  \n",
       "25       NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "26       NaN    NaN     NaN       0                        Normal      1  \n",
       "27     238.0  302.0   433.0       1                  Lung Opacity      1  \n",
       "28       NaN    NaN     NaN       0                        Normal      1  \n",
       "29       NaN    NaN     NaN       0                        Normal      1  \n",
       "...      ...    ...     ...     ...                           ...    ...  \n",
       "28959    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28960  515.0  229.0   358.0       1                  Lung Opacity      2  \n",
       "28961  423.0  202.0   402.0       1                  Lung Opacity      2  \n",
       "28962    NaN    NaN     NaN       0                        Normal      1  \n",
       "28963    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28964  597.0  134.0   220.0       1                  Lung Opacity      2  \n",
       "28965  624.0  164.0   284.0       1                  Lung Opacity      2  \n",
       "28966    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28967    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28968    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28969    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28970    NaN    NaN     NaN       0                        Normal      1  \n",
       "28971    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28972    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28973    NaN    NaN     NaN       0                        Normal      1  \n",
       "28974    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28975    NaN    NaN     NaN       0                        Normal      1  \n",
       "28976    NaN    NaN     NaN       0                        Normal      1  \n",
       "28977    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28978    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28979    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28980    NaN    NaN     NaN       0                        Normal      1  \n",
       "28981  507.0  161.0   218.0       1                  Lung Opacity      1  \n",
       "28982  273.0  241.0   535.0       1                  Lung Opacity      2  \n",
       "28983  350.0  158.0   290.0       1                  Lung Opacity      2  \n",
       "28984    NaN    NaN     NaN       0                        Normal      1  \n",
       "28985    NaN    NaN     NaN       0                        Normal      1  \n",
       "28986    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28987    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "28988    NaN    NaN     NaN       0  No Lung Opacity / Not Normal      1  \n",
       "\n",
       "[28989 rows x 14 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "PathDicom = \"stage_1_train_images/\"\n",
    "\n",
    "lstFilesDCM = []  # create an empty list\n",
    "for dirName, subdirList, fileList in os.walk(PathDicom):\n",
    "    for filename in fileList:\n",
    "        if \".dcm\" in filename.lower(): \n",
    "            lstFilesDCM.append(os.path.join(dirName,filename))\n",
    "            \n",
    "            \n",
    "# Get ref file\n",
    "RefDs = dcm.read_file(lstFilesDCM[0])\n",
    "\n",
    "# Load dimensions based on the number of rows, columns, and slices (along the Z axis)\n",
    "ConstPixelDims = (int(RefDs.Rows), int(RefDs.Columns), len(lstFilesDCM))\n",
    "\n",
    "# Load spacing values (in mm)\n",
    "ConstPixelSpacing = (float(RefDs.PixelSpacing[0]), float(RefDs.PixelSpacing[1]))\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# The array is sized based on 'ConstPixelDims'\n",
    "ArrayDicom = np.zeros(ConstPixelDims, dtype=RefDs.pixel_array.dtype)\n",
    "\n",
    "\n",
    "# loop through all the DICOM files\n",
    "for filenameDCM in lstFilesDCM:\n",
    "    # read the file\n",
    "    ds = dcm.read_file(filenameDCM)\n",
    "    # store the raw image data\n",
    "    ArrayDicom[:, :, lstFilesDCM.index(filenameDCM)] = ds.pixel_array  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'# copy the data back to the original data set\\nds.PixelData = data_downsampling.tobytes()\\n# update the information regarding the shape of the data array\\nds.Rows, ds.Columns = data_downsampling.shape\\n\\n# print the image information given in the dataset\\n'"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''PathDicom = \"stage_1_train_images\"\n",
    "lstFilesDCM = []  # create an empty list\n",
    "for dirName, subdirList, fileList in os.walk(PathDicom):\n",
    "    for filename in fileList:\n",
    "        if \".dcm\" in filename.lower():  # check whether the file's DICOM\n",
    "            lstFilesDCM.append(os.path.join(dirName,filename))\n",
    "\n",
    "for filedcm in lstFilesDCM:            \n",
    "    ds = dcm.read_file(filedcm)\n",
    "\n",
    "    # get the pixel information into a numpy array\n",
    "    data = ds.pixel_array\n",
    "\n",
    "    data_downsampling = data[:,:]\n",
    "\n",
    "# copy the data back to the original data set\n",
    "ds.PixelData = data_downsampling.tobytes()\n",
    "# update the information regarding the shape of the data array\n",
    "ds.Rows, ds.Columns = data_downsampling.shape\n",
    "\n",
    "# print the image information given in the dataset\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[  0,   3,   7, ...,   4,   5,   5],\n",
       "       [  1,   6,  10, ...,   7,   8,   8],\n",
       "       [  1,   6,  10, ...,   8,   8,   9],\n",
       "       ...,\n",
       "       [  0,   4,   9, ..., 220, 228, 219],\n",
       "       [  0,   4,   6, ..., 126, 136, 137],\n",
       "       [  0,   1,   2, ...,   0,   1,   1]], dtype=uint8)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ArrayDicom[:,:,46]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.QuadMesh at 0x7f66d0ded750>"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 300x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(dpi=50)\n",
    "\n",
    "\n",
    "plt.pcolormesh(np.flipud(ArrayDicom[:,:,1001]))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.15"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
